/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.0).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.InlineResponse200;
import io.swagger.model.InlineResponse404;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2019-01-31T20:28:45.450Z")

@Api(value = "user", description = "the user API")
public interface UserApi {

    @ApiOperation(value = "Sample delete.", nickname = "userDelete", notes = "Delets user.", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK"),
        @ApiResponse(code = 404, message = "Endpoint Not found Please make sure you have the right endpoint", response = InlineResponse404.class) })
    @RequestMapping(value = "/user",
        method = RequestMethod.DELETE)
    ResponseEntity<Void> userDelete();


    @ApiOperation(value = "Gets user.", nickname = "userGet", notes = "Get users from db.", response = InlineResponse200.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = InlineResponse200.class) })
    @RequestMapping(value = "/user",
        method = RequestMethod.GET)
    ResponseEntity<InlineResponse200> userGet(@NotNull @ApiParam(value = "Name of user.", required = true) @Valid @RequestParam(value = "name", required = true) String name);

}
