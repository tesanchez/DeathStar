# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class InlineResponse200(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, status: int=None, uuid: str=None, first_name: str=None, last_name: str=None, email: str=None, join_date: str=None):  # noqa: E501
        """InlineResponse200 - a model defined in Swagger

        :param status: The status of this InlineResponse200.  # noqa: E501
        :type status: int
        :param uuid: The uuid of this InlineResponse200.  # noqa: E501
        :type uuid: str
        :param first_name: The first_name of this InlineResponse200.  # noqa: E501
        :type first_name: str
        :param last_name: The last_name of this InlineResponse200.  # noqa: E501
        :type last_name: str
        :param email: The email of this InlineResponse200.  # noqa: E501
        :type email: str
        :param join_date: The join_date of this InlineResponse200.  # noqa: E501
        :type join_date: str
        """
        self.swagger_types = {
            'status': int,
            'uuid': str,
            'first_name': str,
            'last_name': str,
            'email': str,
            'join_date': str
        }

        self.attribute_map = {
            'status': 'status',
            'uuid': 'UUID',
            'first_name': 'first_name',
            'last_name': 'last_name',
            'email': 'email',
            'join_date': 'join_date'
        }

        self._status = status
        self._uuid = uuid
        self._first_name = first_name
        self._last_name = last_name
        self._email = email
        self._join_date = join_date

    @classmethod
    def from_dict(cls, dikt) -> 'InlineResponse200':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The inline_response_200 of this InlineResponse200.  # noqa: E501
        :rtype: InlineResponse200
        """
        return util.deserialize_model(dikt, cls)

    @property
    def status(self) -> int:
        """Gets the status of this InlineResponse200.

        Status code  # noqa: E501

        :return: The status of this InlineResponse200.
        :rtype: int
        """
        return self._status

    @status.setter
    def status(self, status: int):
        """Sets the status of this InlineResponse200.

        Status code  # noqa: E501

        :param status: The status of this InlineResponse200.
        :type status: int
        """

        self._status = status

    @property
    def uuid(self) -> str:
        """Gets the uuid of this InlineResponse200.

        ID from DB  # noqa: E501

        :return: The uuid of this InlineResponse200.
        :rtype: str
        """
        return self._uuid

    @uuid.setter
    def uuid(self, uuid: str):
        """Sets the uuid of this InlineResponse200.

        ID from DB  # noqa: E501

        :param uuid: The uuid of this InlineResponse200.
        :type uuid: str
        """

        self._uuid = uuid

    @property
    def first_name(self) -> str:
        """Gets the first_name of this InlineResponse200.

        Users first name  # noqa: E501

        :return: The first_name of this InlineResponse200.
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name: str):
        """Sets the first_name of this InlineResponse200.

        Users first name  # noqa: E501

        :param first_name: The first_name of this InlineResponse200.
        :type first_name: str
        """

        self._first_name = first_name

    @property
    def last_name(self) -> str:
        """Gets the last_name of this InlineResponse200.

        Users last name  # noqa: E501

        :return: The last_name of this InlineResponse200.
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name: str):
        """Sets the last_name of this InlineResponse200.

        Users last name  # noqa: E501

        :param last_name: The last_name of this InlineResponse200.
        :type last_name: str
        """

        self._last_name = last_name

    @property
    def email(self) -> str:
        """Gets the email of this InlineResponse200.

        Users email  # noqa: E501

        :return: The email of this InlineResponse200.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email: str):
        """Sets the email of this InlineResponse200.

        Users email  # noqa: E501

        :param email: The email of this InlineResponse200.
        :type email: str
        """

        self._email = email

    @property
    def join_date(self) -> str:
        """Gets the join_date of this InlineResponse200.

        Unix timestamp of user posted to DB  # noqa: E501

        :return: The join_date of this InlineResponse200.
        :rtype: str
        """
        return self._join_date

    @join_date.setter
    def join_date(self, join_date: str):
        """Sets the join_date of this InlineResponse200.

        Unix timestamp of user posted to DB  # noqa: E501

        :param join_date: The join_date of this InlineResponse200.
        :type join_date: str
        """

        self._join_date = join_date
