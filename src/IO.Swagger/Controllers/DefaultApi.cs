/*
 * Sample
 *
 * Gets users from DB
 *
 * OpenAPI spec version: 1.0.0
 * Contact: t.s@smartbear.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.WebUtilities;
using Microsoft.Extensions.Logging;
using Microsoft.Extensions.Primitives;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    public class DefaultApiController : Controller
    { 
        /// <summary>
        /// Gets Users.
        /// </summary>
        /// <remarks>Gets Users from employee db.</remarks>
        /// <param name="name">employee</param>
        /// <response code="200">OK</response>
        /// <response code="400">Invalid request</response>
        [HttpGet]
        [Route("/SE-Design/TemilHR/0.1/user")]
        [ValidateModelState]
        [SwaggerOperation("UserGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(InlineResponse200), description: "OK")]
        [SwaggerResponse(statusCode: 400, type: typeof(InlineResponse400), description: "Invalid request")]
        public virtual IActionResult UserGet([FromQuery][Required()]string name)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(InlineResponse200));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(InlineResponse400));

            string exampleJson = null;
            exampleJson = "{\n  \"name\" : \"Temil Sanchez\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<InlineResponse200>(exampleJson)
            : default(InlineResponse200);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
